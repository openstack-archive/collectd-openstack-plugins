# General settings
COLLECTD_CEILOMETER_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )
COLLECTD_BATCH_SIZE=${COLLECTD_BATCH_SIZE:-1}
# Using tag for master branch
COLLECTD_BRANCH=${COLLECTD_BRANCH:-collectd-5.7.1}
COLLECTD_DIR=${COLLECTD_DIR:-$DEST/collectd-$COLLECTD_BRANCH/}
COLLECTD_INSTALL=$(trueorfalse True COLLECTD_INSTALL)
COLLECTD_INSTALL_TYPE=${COLLECTD_INSTALL_TYPE:-'binary'}
COLLECTD_CONF_DIR=${COLLECTD_CONF_DIR:-''}
# this is a mirror of: git://git.verplant.org/collectd.git
COLLECTD_REPO=${COLLECTD_REPO:-'https://github.com/collectd/collectd.git'}
COLLECTD_PREFIX=${COLLECTD_PREFIX:-'/usr'}

COLLECTD_CEILOMETER_VERBOSE=$(trueorfalse False COLLECTD_CEILOMETER_VERBOSE)
COLLECTD_GNOCCHI_VERBOSE=$(trueorfalse COLLECTD_CEILOMETER_VERBOSE COLLECTD_GNOCCHI_VERBOSE)
COLLECTD_AODH_VERBOSE=$(trueorfalse COLLECTD_CEILOMETER_VERBOSE COLLECTD_AODH_VERBOSE)

COLLECTD_CEILOMETER_ENABLED=$(trueorfalse False COLLECTD_CEILOMETER_ENABLED)
COLLECTD_GNOCCHI_ENABLED=$(trueorfalse True COLLECTD_GNOCCHI_ENABLED)
COLLECTD_AODH_ENABLED=$(trueorfalse False COLLECTD_AODH_ENABLED)

# Configurations for Collectd LogFile plugin
COLLECTD_LOG_FILE=${COLLECTD_LOG_FILE:-$LOGDIR/collectd.log}
COLLECTD_LOG_LEVEL=${COLLECTD_LOG_LEVEL:-info}

# Ceilometer connection info.
CEILOMETER_URL_TYPE=${CEILOMETER_URL_TYPE:-internalURL}
CEILOMETER_TIMEOUT=${CEILOMETER_TIMEOUT:-1000}

# Auth info
OS_AUTH_URL="$KEYSTONE_SERVICE_URI/v$IDENTITY_API_VERSION"
OS_IDENTITY_API_VERSION=${IDENTITY_API_VERSION:-3}

# Fall back to default conf dir if option is unset
if [ -z $COLLECTD_CONF_DIR ]; then
    if is_ubuntu; then
        COLLECTD_CONF_DIR=/etc/collectd/collectd.conf.d
    elif is_fedora; then
        COLLECTD_CONF_DIR=/etc/collectd.d
    fi
fi

#Custom units feature
COLLECTD_CEILOMETER_UNITS=${COLLECTD_CEILOMETER_CUSTOM_UNITS:-none}
COLLECTD_GNOCCHI_UNITS=${COLLECTD_GNOCCHI_CUSTOM_UNITS:-none}

# User defined requirements
COLLECTD_ADDITIONAL_PACKAGES=${COLLECTD_ADDITIONAL_PACKAGES:-''}
COLLECTD_REQUIREMENTS=''

# Definition for requirements
ubuntu_bin_requirements="libvirt-bin libvirt-dev python-libvirt"
ubuntu_src_requirements="$ubuntu_bin_requirements byacc flex bison build-essential automake libgcrypt20 libtool"
centos_bin_requirements="libvirt libvirt-devel libvirt-python"
centos_src_requirements="$centos_bin_requirements flex bison automake autoconf libtool"

if is_ubuntu; then
   if [[ "$COLLECTD_INSTALL_TYPE" == "source" ]]; then
        COLLECTD_REQUIREMENTS="$ubuntu_src_requirements"
   else
        COLLECTD_REQUIREMENTS="$ubuntu_bin_requirements"
   fi
elif is_fedora; then
  if [[ "$COLLECTD_INSTALL_TYPE" == "source" ]]; then
        COLLECTD_REQUIREMENTS="$centos_src_requirements"
  else
        COLLECTD_REQUIREMENTS="$centos_bin_requirements"
  fi
fi
